mutate(total_hundred=round(1000*perc_total)) %>%
mutate(date=lapply(date, as.character)) %>%
mutate(date=as.Date(str_sub(date, 2, 6))) %>%
mutate(date=gsub("\\.", "-", bexar$date)) %>%
mutate(avg=cummean(ifelse(is.na(bexar$new_cases), 0, bexar$new_cases)))
# It took a long time to get the dates right.
bexar <- my_data %>% filter(County.Name=="Bexar") %>%
gather("date", "cases", -County.Name, -Population, na.rm = TRUE) %>%
filter(date!="03-04") %>%
mutate(Population=as.numeric(Population)) %>%
mutate(Population=2093502) %>%
mutate(prev_total=lag(cases)) %>%
mutate(new_cases=cases-prev_total) %>%
mutate(perc_total=cases / Population * 100) %>%
mutate(perc_new=new_cases/Population * 100) %>%
mutate(total_hundred=round(1000*perc_total)) %>%
mutate(date=lapply(date, as.character)) %>%
mutate(date=str_sub(date, 2, 6)) %>%
mutate(date=gsub("\\.", "-", bexar$date)) %>%
mutate(avg=cummean(ifelse(is.na(bexar$new_cases), 0, bexar$new_cases)))
ggplot(bexar, aes(x=date, y=new_cases, group=)) +
geom_col(width=0.7) +
geom_point(aes(x=date, y=avg), color="red") +
scale_x_continuous(name = "Date",
breaks = seq(by = 14),
expand = c(0, 1)) +
theme(plot.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
panel.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(hjust=2, vjust=3,
face="bold",
size=8, angle=50),
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(1,"cm"),
legend.position = c(0.3, 0.8),
legend.text = element_text(size = 10),
legend.title = element_blank(),
legend.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
plot.caption = element_text(color="#A9A9A9",
family="Verdana"))
ggplot(bexar, aes(x=date, y=new_cases, group=)) +
geom_col(width=0.7) +
geom_point(aes(x=date, y=avg), color="red") +
scale_x_continuous(name = "Date",
breaks = seq(by = 14),
expand = c(0, 1)) +
theme(plot.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
panel.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(hjust=2, vjust=3,
face="bold",
size=8, angle=50),
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(1,"cm"),
legend.position = c(0.3, 0.8),
legend.text = element_text(size = 10),
legend.title = element_blank(),
legend.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
plot.caption = element_text(color="#A9A9A9",
family="Verdana"))
ggplot(bexar, aes(x=date, y=new_cases, group=)) +
geom_col(width=0.7) +
geom_point(aes(x=date, y=avg), color="red") +
scale_x_discrete(name = "Date",
breaks = seq(by = 14),
expand = c(0, 1)) +
theme(plot.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
panel.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(hjust=2, vjust=3,
face="bold",
size=8, angle=50),
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(1,"cm"),
legend.position = c(0.3, 0.8),
legend.text = element_text(size = 10),
legend.title = element_blank(),
legend.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
plot.caption = element_text(color="#A9A9A9",
family="Verdana"))
ggplot(bexar, aes(x=date, y=new_cases, group=)) +
geom_col(width=0.7) +
geom_point(aes(x=date, y=avg), color="red") +
scale_x_discrete(name = "Date",
breaks = seq(by = 2),
expand = c(0, 1)) +
theme(plot.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
panel.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(hjust=2, vjust=3,
face="bold",
size=8, angle=50),
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(1,"cm"),
legend.position = c(0.3, 0.8),
legend.text = element_text(size = 10),
legend.title = element_blank(),
legend.background = element_rect(fill="#FFF5EE", color = "#FFF5EE"),
plot.caption = element_text(color="#A9A9A9",
family="Verdana"))
# It took a long time to get the dates right.
bexar <- my_data %>% filter(County.Name=="Bexar") %>%
gather("date", "cases", -County.Name, -Population, na.rm = TRUE) %>%
filter(date!="03-04") %>%
mutate(Population=as.numeric(Population)) %>%
mutate(Population=2093502) %>%
mutate(prev_total=lag(cases)) %>%
mutate(new_cases=cases-prev_total) %>%
mutate(perc_total=cases / Population * 100) %>%
mutate(perc_new=new_cases/Population * 100) %>%
mutate(total_hundred=round(1000*perc_total)) %>%
mutate(date=lapply(date, as.character)) %>%
mutate(date=str_sub(date, 2, 6)) %>%
mutate(date=gsub("\\.", "-", bexar$date)) %>%
mutate(date=as.Date(bexar$date, "%m/%d"))
view(bexar)
# It took a long time to get the dates right.
bexar <- my_data %>% filter(County.Name=="Bexar") %>%
gather("date", "cases", -County.Name, -Population, na.rm = TRUE) %>%
filter(date!="03-04") %>%
mutate(Population=as.numeric(Population)) %>%
mutate(Population=2093502) %>%
mutate(prev_total=lag(cases)) %>%
mutate(new_cases=cases-prev_total) %>%
mutate(perc_total=cases / Population * 100) %>%
mutate(perc_new=new_cases/Population * 100) %>%
mutate(total_hundred=round(1000*perc_total)) %>%
mutate(date=lapply(date, as.character)) %>%
mutate(date=str_sub(date, 2, 6)) %>%
mutate(date=gsub("\\.", "-", bexar$date)) %>%
mutate(date=as.Date(bexar$date, "%m-%d"))
view(bexar)
# It took a long time to get the dates right.
bexar <- my_data %>% filter(County.Name=="Bexar") %>%
gather("date", "cases", -County.Name, -Population, na.rm = TRUE) %>%
filter(date!="03-04") %>%
mutate(Population=as.numeric(Population)) %>%
mutate(Population=2093502) %>%
mutate(prev_total=lag(cases)) %>%
mutate(new_cases=cases-prev_total) %>%
mutate(perc_total=cases / Population * 100) %>%
mutate(perc_new=new_cases/Population * 100) %>%
mutate(total_hundred=round(1000*perc_total)) %>%
mutate(date=lapply(date, as.character)) %>%
mutate(date=str_sub(date, 2, 6)) %>%
mutate(date=gsub("\\.", "-", bexar$date)) %>%
mutate(date=as.Date(bexar$date, "%m-%d")) %>%
mutate(avg=cummean(ifelse(is.na(bexar$new_cases), 0, bexar$new_cases)))
?strftime
# It took a long time to get the dates right.
bexar <- my_data %>% filter(County.Name=="Bexar") %>%
gather("date", "cases", -County.Name, -Population, na.rm = TRUE) %>%
filter(date!="03-04") %>%
mutate(Population=as.numeric(Population)) %>%
mutate(Population=2093502) %>%
mutate(prev_total=lag(cases)) %>%
mutate(new_cases=cases-prev_total) %>%
mutate(perc_total=cases / Population * 100) %>%
mutate(perc_new=new_cases/Population * 100) %>%
mutate(total_hundred=round(1000*perc_total)) %>%
mutate(date=lapply(date, as.character)) %>%
mutate(date=str_sub(date, 2, 6)) %>%
mutate(date=gsub("\\.", "-", bexar$date)) %>%
mutate(date=as.Date(bexar$date, "%m-%d")) %>%
mutate(avg=cummean(ifelse(is.na(bexar$new_cases), 0, bexar$new_cases)))
view(bexar)
?as.Date
Sys.getlocale()
Sys.setlocale("LC_Time", "C")
Sys.setlocale("LC_TIME", "C")
# It took a long time to get the dates right.
bexar <- my_data %>% filter(County.Name=="Bexar") %>%
gather("date", "cases", -County.Name, -Population, na.rm = TRUE) %>%
filter(date!="03-04") %>%
mutate(Population=as.numeric(Population)) %>%
mutate(Population=2093502) %>%
mutate(prev_total=lag(cases)) %>%
mutate(new_cases=cases-prev_total) %>%
mutate(perc_total=cases / Population * 100) %>%
mutate(perc_new=new_cases/Population * 100) %>%
mutate(total_hundred=round(1000*perc_total)) %>%
mutate(date=lapply(date, as.character)) %>%
mutate(date=str_sub(date, 2, 6)) %>%
mutate(date=gsub("\\.", "-", bexar$date)) %>%
#mutate(date=as.Date(bexar$date, "%m-%d")) %>%
mutate(avg=cummean(ifelse(is.na(bexar$new_cases), 0, bexar$new_cases)))
view(bexar)
view(my_data)
#Load libraries
library(tidyverse)
#Load in data
friends <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends.csv')
friends_emotions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_emotions.csv')
friends_info <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_info.csv')
#Load in data
friends <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends.csv')
friends_emotions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_emotions.csv')
friends_info <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_info.csv')
View(friends_emotions)
View(friends)
# Load libraries
library(tidyverse)
library(extrafont)
library(ggtext)
library(ggdraw)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
head(beer_awards)
# exploratory plots
ggplot(beer_awards) +
geom_bar(aes(x=medal, y=1), stat="identity") +
facet_wrap(facets=state)
# exploratory plots
ggplot(beer_awards) +
geom_bar(aes(x=medal, y=1), stat="identity") +
facet_wrap(facets=beer_awards$state)
# exploratory plots
ggplot(beer_awards) +
geom_bar(aes(x=medal, y=1, group=state), stat="identity") +
facet_wrap(facets=beer_awards$state)
# exploratory plots
ggplot(beer_awards) +
geom_bar(aes(x=medal, y=1, color=state), stat="identity") +
facet_wrap(facets=beer_awards$state)
# exploratory plots
ggplot(beer_awards) +
geom_bar(aes(x=medal, y=1, group=state), stat="identity") +
facet_wrap(facets=beer_awards$state)
View(beer_awards)
# exploratory plots
ggplot(beer_awards) +
geom_bar(aes(x=medal, y=1, group=state), stat="identity") +
facet_grid(beer_awards$state)
# exploratory plots
ggplot(beer_awards) +
geom_bar(aes(x=medal, y=1, group=state), stat="identity") +
facet_wrap(beer_awards$state)
# Yeehaw
beer <- beer_awards %>%
mutate(as.factor(state))
# exploratory plots
ggplot(beer) +
geom_bar(aes(x=medal, y=1, group=state), stat="identity") +
facet_wrap(beer$state)
# exploratory plots
ggplot(beer) +
geom_col(aes(x=medal, y=1, group=state), stat="identity") +
facet_wrap(beer$state)
# exploratory plots
ggplot(beer) +
geom_col(aes(x=state, y=medal)) +
geom_bar
# exploratory plots
ggplot(beer) +
geom_col(aes(x=state, y=medal)) +
geom_bar()
# exploratory plots
ggplot(beer) +
geom_col(aes(x=state, y=medal)) +
geom_col()
# exploratory plots
beer %>% ggplot(aes(x=medal, y=1, group=state)) +
geom_bar(stat="identity") +
facet_wrap(beer$state)
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
beer_awards <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-10-20/beer_awards.csv')
# Yeehaw
beer <- beer_awards %>%
mutate(as.factor(state))
# exploratory plots
beer %>% ggplot(aes(x=year, y=1, group=state)) +
geom_bar(stat="identity")
# exploratory plots
beer %>% ggplot(aes(x=year, y=1, group=state)) +
geom_bar(stat="identity",
color=state)
# exploratory plots
beer %>% ggplot(aes(x=year, y=1, group=state)) +
geom_bar(stat="identity",
color=beer$state)
# exploratory plots
beer %>% ggplot(aes(x=year, y=1, group=state, color=state)) +
geom_bar(stat="identity")
beer %>% ggplot(aes(x=medal, y=1, group=state)) +
facet_wrap(beer$state)
beer %>% ggplot(aes(x=medal, y=1, group=state)) +
facet_wrap()
beer %>% ggplot(aes(x=medal, y=1, group=state)) +
facet_wrap(beer$city)
beer %>% ggplot(aes(x=medal, y=1, group=state)) +
facet_wrap(beer$city)
beer %>% ggplot(aes(x=medal, y=1, group=state)) +
facet_wrap(beer$state)
beer$state %>% ggplot(aes(x=medal, y=1, group=state)))
beer$state %>% ggplot(aes(x=medal, y=1, group=state))
beer %>% ggplot(aes(x=medal, y=1, group=state))
beer %>% ggplot(aes(x=medal, y=1, group=state)) +
geom_bar(stat="identity")
beer %>% ggplot(aes(x=medal, y=1, group=state)) +
geom_bar(stat="identity") +
facet_wrap(beer$state)
levels(beer$state)
# Yeehaw
beer <- beer_awards %>%
mutate(as.factor(state))
# Yeehaw
beer <- beer_awards %>%
mutate(state=as.factor(state))
# exploratory plots
beer %>% ggplot(aes(x=year, y=1, group=state, color=state)) +
geom_bar(stat="identity")
levels(beer$state)
beer %>% ggplot(aes(x=medal, y=1, group=state)) +
geom_bar(stat="identity") +
facet_wrap(beer$state)
arrange(desc(sum(n(medals)))
arrange(desc(sum(n(medals))
top10 <- beer %>%
group_by(state) %>%
arrange(desc(sum(n(medals))))
top10 <- beer %>%
group_by(state) %>%
arrange(desc(sum(n())))
top10 <- beer %>%
group_by(state) %>%
arrange(desc(n()))
top10 <- beer %>%
group_by(state) %>%
arrange(desc(sum(medals)))
View(beer)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n())
View(top10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
arrange(desc(total))
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
arrange(desc(total))
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
arrange(desc(state))
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
arrange(desc(year))
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total))
View(top10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
nest(state) %<%
slice(1:10) %>%
unnest()
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
nest(state) %>%
slice(1:10) %>%
unnest()
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
nest(state)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
nest(-state)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest()
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest() %>%
slice(1:10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest() %>%
slice(1:10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest()
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest() %>%
slice(state, 1:10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest() %>%
slice_max(n=10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest() %>%
top_n(10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest() %>%
top_n(10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest() %>%
top_n(1:10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest() %>%
top_n(n=10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total)) %>%
group_by(state) %>%
nest() %>%
top_n(state,n=10)
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup()
top10 <- beer %>%
group_by(state) %>%
mutate(total=n())
top10 <- beer %>%
group_by(state) %>%
mutate(total=n()) %>%
ungroup() %>%
arrange(desc(total))
(tidyverse)
# Load libraries
library(tidyverse)
library(extrafont)
library(ggtext)
# Get the data
transit_cost <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-05/transit_cost.csv')
# set working directory
setwd("C:/Users/jake/Documents/R/tidy-tuesday/transit-costs/")
# set working directory
setwd("C:/Users/jake/Documents/R/tidy-tuesday/TidyTuesday_Hakim/R_scripts/transit-costs/")
